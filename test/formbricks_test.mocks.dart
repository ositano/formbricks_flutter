// Mocks generated by Mockito 5.4.6 from annotations
// in formbricks_flutter/test/formbricks_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter/cupertino.dart' as _i3;
import 'package:formbricks_flutter/formbricks_flutter.dart' as _i2;
import 'package:formbricks_flutter/src/models/question.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFormbricksClient_0 extends _i1.SmartFake
    implements _i2.FormbricksClient {
  _FakeFormbricksClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBuildContext_1 extends _i1.SmartFake implements _i3.BuildContext {
  _FakeBuildContext_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SurveyManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSurveyManager extends _i1.Mock implements _i2.SurveyManager {
  MockSurveyManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FormbricksClient get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeFormbricksClient_0(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i2.FormbricksClient);

  @override
  String get userId =>
      (super.noSuchMethod(
            Invocation.getter(#userId),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#userId),
            ),
          )
          as String);

  @override
  Map<String, dynamic> get userAttributes =>
      (super.noSuchMethod(
            Invocation.getter(#userAttributes),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  Map<String, int> get eventCounts =>
      (super.noSuchMethod(
            Invocation.getter(#eventCounts),
            returnValue: <String, int>{},
          )
          as Map<String, int>);

  @override
  Map<String, bool> get completedSurveys =>
      (super.noSuchMethod(
            Invocation.getter(#completedSurveys),
            returnValue: <String, bool>{},
          )
          as Map<String, bool>);

  @override
  _i2.SurveyDisplayMode get surveyDisplayMode =>
      (super.noSuchMethod(
            Invocation.getter(#surveyDisplayMode),
            returnValue: _i2.SurveyDisplayMode.dialog,
          )
          as _i2.SurveyDisplayMode);

  @override
  bool get showPoweredBy =>
      (super.noSuchMethod(Invocation.getter(#showPoweredBy), returnValue: false)
          as bool);

  @override
  List<_i2.TriggerValue> get triggers =>
      (super.noSuchMethod(
            Invocation.getter(#triggers),
            returnValue: <_i2.TriggerValue>[],
          )
          as List<_i2.TriggerValue>);

  @override
  String get locale =>
      (super.noSuchMethod(
            Invocation.getter(#locale),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#locale),
            ),
          )
          as String);

  @override
  _i3.BuildContext get context =>
      (super.noSuchMethod(
            Invocation.getter(#context),
            returnValue: _FakeBuildContext_1(this, Invocation.getter(#context)),
          )
          as _i3.BuildContext);

  @override
  String get currentLocale =>
      (super.noSuchMethod(
            Invocation.getter(#currentLocale),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#currentLocale),
            ),
          )
          as String);

  @override
  set userId(String? _userId) => super.noSuchMethod(
    Invocation.setter(#userId, _userId),
    returnValueForMissingStub: null,
  );

  @override
  set userAttributes(Map<String, dynamic>? _userAttributes) =>
      super.noSuchMethod(
        Invocation.setter(#userAttributes, _userAttributes),
        returnValueForMissingStub: null,
      );

  @override
  set completedSurveys(Map<String, bool>? _completedSurveys) =>
      super.noSuchMethod(
        Invocation.setter(#completedSurveys, _completedSurveys),
        returnValueForMissingStub: null,
      );

  @override
  set onSurveyTriggered(dynamic Function(String)? _onSurveyTriggered) =>
      super.noSuchMethod(
        Invocation.setter(#onSurveyTriggered, _onSurveyTriggered),
        returnValueForMissingStub: null,
      );

  @override
  set triggers(List<_i2.TriggerValue>? _triggers) => super.noSuchMethod(
    Invocation.setter(#triggers, _triggers),
    returnValueForMissingStub: null,
  );

  @override
  set locale(String? _locale) => super.noSuchMethod(
    Invocation.setter(#locale, _locale),
    returnValueForMissingStub: null,
  );

  @override
  void setLocale(String? newLocale) => super.noSuchMethod(
    Invocation.method(#setLocale, [newLocale]),
    returnValueForMissingStub: null,
  );

  @override
  void setUserId(String? newUserId) => super.noSuchMethod(
    Invocation.method(#setUserId, [newUserId]),
    returnValueForMissingStub: null,
  );

  @override
  void addEvent(_i2.TriggerValue? event) => super.noSuchMethod(
    Invocation.method(#addEvent, [event]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  bool shouldDisplaySurvey(double? displayPercentage) =>
      (super.noSuchMethod(
            Invocation.method(#shouldDisplaySurvey, [displayPercentage]),
            returnValue: false,
          )
          as bool);

  @override
  bool isWithinDateRange(_i2.Survey? survey) =>
      (super.noSuchMethod(
            Invocation.method(#isWithinDateRange, [survey]),
            returnValue: false,
          )
          as bool);

  @override
  bool matchesTrigger(_i2.Survey? survey) =>
      (super.noSuchMethod(
            Invocation.method(#matchesTrigger, [survey]),
            returnValue: false,
          )
          as bool);

  @override
  bool matchesSegment(_i2.Survey? survey) =>
      (super.noSuchMethod(
            Invocation.method(#matchesSegment, [survey]),
            returnValue: false,
          )
          as bool);

  @override
  bool evaluateSegmentFilters(List<dynamic>? filters) =>
      (super.noSuchMethod(
            Invocation.method(#evaluateSegmentFilters, [filters]),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<void> showSurveyAsync(_i2.Survey? survey) =>
      (super.noSuchMethod(
            Invocation.method(#showSurveyAsync, [survey]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  int calculateEstimatedTime(List<_i6.Question>? questions) =>
      (super.noSuchMethod(
            Invocation.method(#calculateEstimatedTime, [questions]),
            returnValue: 0,
          )
          as int);
}
